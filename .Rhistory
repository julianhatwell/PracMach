, col.regions = myPal)
levelplot(get(results[1])$table
, shrink = c(0, 1)
, col.regions = level.colors(x, myPal)
)
level.colos(c(1,100), myPal)
level.colors(c(1,100), myPal)
level.colors(1, myPal)
level.colors(10, myPal)
depth.col <-
with(quakes,
level.colors(depth, at = do.breaks(range(depth), 30),
col.regions = terrain.colors))
xyplot(lat ~ long | equal.count(stations), quakes,
strip = strip.custom(var.name = "Stations"),
colours = depth.col,
panel = function(x, y, colours, subscripts, ...) {
panel.xyplot(x, y, pch = 21, col = "transparent",
fill = colours[subscripts], ...)
})
terrain.colors
depth.col <-
with(quakes,
level.colors(depth, at = do.breaks(range(depth), 30)
)
depth.col <-
with(quakes,
level.colors(depth, at = do.breaks(range(depth), 30),
col.regions = terrain.colors))
depth.col
head(lev$regions$col)
colorRampPalette(myPal, 1000)
regions.myPal <- colorRampPalette(myPal, 1000)
regions.myPal(1)
regions.myPal(1000)
regions.myPal(10000)
depth.col <-
with(quakes,
level.colors(depth, at = do.breaks(range(depth), 30),
col.regions = regions.myPal))
xyplot(lat ~ long | equal.count(stations), quakes,
strip = strip.custom(var.name = "Stations"),
colours = depth.col,
panel = function(x, y, colours, subscripts, ...) {
panel.xyplot(x, y, pch = 21, col = "transparent",
fill = colours[subscripts], ...)
})
regions.myPal <- colorRampPalette(myPal)
regions.myPal(1)
regions.myPal(1000)
col.regions = regions.myPal))
xyplot(lat ~ long | equal.count(stations), quakes,
strip = strip.custom(var.name = "Stations"),
colours = depth.col,
panel = function(x, y, colours, subscripts, ...) {
panel.xyplot(x, y, pch = 21, col = "transparent",
fill = colours[subscripts], ...)
})
myPal.range <- colorRampPalette(myPal)
levelplot(get(results[1])$table
, shrink = c(0, 1)
, col.regions = myPal.range)
levelplot(log(get(results[1])$table)
levelplot(log(get(results[1])$table)
, shrink = c(0, 1)
, col.regions = myPal.range)
myPal.range2 <- colorRampPalette(rev(myPal))
levelplot(log(get(results[1])$table)
, shrink = c(0, 1)
, col.regions = myPal.range2)
levelplot(log10(get(results[1])$table)
, shrink = c(0, 1)
, col.regions = myPal.range2)
levelplot(sqrt(get(results[1])$table)
, shrink = c(0, 1)
, col.regions = myPal.range2)
levelplot(sqrt(get(results[1])$table)
, shrink = c(0.5, 1)
, col.regions = myPal.range2)
myPal
myPal2 <- rev(myPal[1:4], #FFFFFF)
)
myPal2 <- c(rev(myPal[1:4], #FFFFFF))
myPal2 <- c(rev(myPal[1:4], "#FFFFFF"))
myPal2 <- myPal[1:4]
myPal2 <- rev(myPal[1:4])
myPal2 <- c(rev(myPal[1:4]), "#FFFFFF")
myPal.range2 <- colorRampPalette(rev(myPal2))
levelplot(sqrt(get(results[1])$table)
, shrink = c(0.5, 1)
, col.regions = myPal.range2)
myPal2 <- c("#FFFFFF", myPal[1:4], )
myPal2 <- c("#FFFFFF", myPal[1:4])
levelplot(sqrt(get(results[1])$table)
, shrink = c(0.5, 1)
, col.regions = myPal.range2)
myPal.range2 <- colorRampPalette(rev(myPal2))
levelplot(sqrt(get(results[1])$table)
, shrink = c(0.5, 1)
, col.regions = myPal.range2)
myPal2 <- c(myPal[1:4], "#FFFFFF")
myPal.range2 <- colorRampPalette(rev(myPal2))
levelplot(sqrt(get(results[1])$table)
, shrink = c(0.5, 1)
, col.regions = myPal.range2)
myPal2 <- c(myPal[2:4], "#FFFFFF")
myPal.range2 <- colorRampPalette(rev(myPal2))
levelplot(sqrt(get(results[1])$table)
, shrink = c(0.5, 1)
, col.regions = myPal.range2)
myPal.range <- colorRampPalette(c(myPal[2:4], "#FFFFFF"))
levelplot(sqrt(get(results[1])$table)
, shrink = c(0.5, 1)
, col.regions = myPal.range2)
levelplot(log(get(results[1])$table)
, shrink = c(0.5, 1)
, col.regions = myPal.range)
levelplot(sqrt(get(results[1])$table)
, shrink = c(0.5, 1)
, col.regions = myPal.range)
myPal.range <- colorRampPalette(c("#FFFFFF", c(myPal[4:2] )))
levelplot(sqrt(get(results[1])$table)
, shrink = c(0.5, 1)
, col.regions = myPal.range)
levelplot(get(results[1])$table
, shrink = c(0.5, 1)
, col.regions = myPal.range)
levelplot(get(results[2])$table
, shrink = c(0.5, 1)
, col.regions = myPal.range)
levelplot(get(results[2])$table + get(results[3])$table
, shrink = c(0.5, 1)
, col.regions = myPal.range)
get(results[2])$table[A,]
get(results[2])$table["A",]
get(results[2])$table
t <- matrix(nrow = 0)
t <- matrix(NULL, nrow = 0)
ls("t")
exists(t)
exists("t")
t
confmats
if (!exists("confmats")) { rm(confmats) }
for (t in 1:6) {
if (!exists("confmats")) {
confmats <- get(results[t])$table
}  else
confmats <- cbind(get(results[t])$table)
}
confmats
if (!exists("confmats")) { rm(confmats) }
for (t in 1:6) {
if (!exists("confmats")) {
confmats <- get(results[t])$table
}  else
confmats <- cbind(confmats, get(results[t])$table)
}
confmats
if (!exists("confmats")) { rm(confmats) }
for (t in 1:6) {
if (!exists("confmats")) {
confmats <- get(results[t])$table
}  else
confmats <- rbind(confmats, get(results[t])$table)
}
if (exists("confmats")) { rm(confmats) }
for (t in 1:6) {
if (!exists("confmats")) {
confmats <- get(results[t])$table
}  else
confmats <- rbind(confmats, get(results[t])$table)
}
confmats
confmats <- data.frame()
confmats <- data.frame()
for (t in 1:6) {
confmats <- rbind(confmats, get(results[t])$table)
}
confmats
names(confmats)
head(confmats)
confmats <- data.frame()
for (t in 1:6) {
confmats <- rbind(confmats
, cbind(model = results[t]
, get(results[t])$table)
}
confmats <- data.frame()
for (t in 1:6) {
confmats <- rbind(confmats
, cbind(model = results[t]
, get(results[t])$table)
)
}
head(confmats)
confmats <- data.frame()
for (t in 1:6) {
confmats <- rbind(confmats
, cbind.data.frame(model = results[t]
, get(results[t])$table)
)
}
head(confmats)
str(confmats
)
levelplot(Freq~Prediction+Reference | model, data = confmats)
)
levelplot(Freq~Prediction+Reference | model
, data = confmats
, shrink = c(0.5, 1)
, col.regions = myPal.range)
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.5, 1)
, col.regions = myPal.range)
levelplot(log(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.5, 1)
, col.regions = myPal.range)
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.5, 1)
, col.regions = myPal.range)
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range)
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(style = 5))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.default(bg = myPal[1]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.default(..., bg = myPal[1]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(..., bg = myPal[1]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip = strip.custom(style = 4))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(style = 4))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom())
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = 1))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = myPal[1]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = myPal[2]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = myPal[4]))
, cex = 0.8))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = myPal[4])
, main = list(label = "Levelplots of the confusion matrices\nColour and size show sqrt(Frequency) for emphasis"
, cex = 0.8))
confmats <- data.frame()
for (t in 1:6) {
confmats <- rbind(confmats
, cbind.data.frame(model = results[t]
, get(results[t])$table)
)
}
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, alternating = list(x = 1:0, y = 0)
, strip = strip.custom(bg = myPal[4]))
#, alternating = list(x = 1:0, y = 0)
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
#, alternating = list(x = 1:0, y = 0)
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, alternating = list(x = 2, y = 0)
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, alternating = 0:3
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, alternating = 0:3
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, alternating = 2
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, alternating = 7
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, scales = list(x = list(alternating = 1)
, y = list(alternating =0))
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, scales = list(x = list(alternating = c(1,0,1))
, y = list(alternating = 0))
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, scales = list(x = list(alternating = TRUE)
, y = list(alternating = 0))
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, scales = list(x = list(alternating = c(1,0,1))
, y = list(alternating = 0))
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, scales = list(x = list(alternating = c(1,0,1))
, y = list(alternating = 1:2))
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, scales = list(x = list(alternating = c(1,0,1))
, y = list(alternating = 2:1))
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, scales = list(x = list(alternating = c(1,0,1))
, y = list(alternating = 2))
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, scales = list(x = list(alternating = c(1,0,1))
, y = list(alternating = c(0,3)))
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, scales = list(x = list(alternating = c(1,0,1))
, y = list(alternating = c(0,3)
, tck = 1:0)
)
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, scales = list(x = list(alternating = c(1,0,1))
, y = list(alternating = c(0,3)
, tck = 0)
)
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, scales = list(x = list(alternating = c(1,0,1)
, tck = 1:0)
, y = list(alternating = c(0,3))
)
, strip = strip.custom(bg = myPal[4]))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = myPal[4])
, scales = list(x = list(alternating = c(1,0,1)
, tck = 1:0)
, y = list(alternating = c(0,3))
)
, main = list(label = paste("Levelplots of the confusion matrices\nColour and size show", expression(sqrt(Frequency)), "for emphasis")
, cex = 0.8))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = myPal[4])
, scales = list(x = list(alternating = c(1,0,1)
, tck = 1:0)
, y = list(alternating = c(0,3))
)
, main = list(label = paste("Levelplots of the confusion matrices\nColour and size show", expression(sqrt("Frequency")), "for emphasis")
, cex = 0.8))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = myPal[4])
, scales = list(x = list(alternating = c(1,0,1)
, tck = 1:0)
, y = list(alternating = c(0,3))
)
, main = list(label = expression(paste("Levelplots of the confusion matrices\nColour and size show", sqrt("Frequency"), "for emphasis"))
, cex = 0.8))
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = myPal[4])
, scales = list(x = list(alternating = c(1,0,1)
, tck = 1:0)
, y = list(alternating = c(0,3))
)
, main = list(label = "Levelplots of the confusion matrices"
, cex = 0.8)
, sub = expression(paste("Colour and size scaled for emphasis to", sqrt("Frequency")))
)
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = myPal[4])
, scales = list(x = list(alternating = c(1,0,1)
, tck = 1:0)
, y = list(alternating = c(0,3))
)
, main = list(label = "Levelplots of the confusion matrices"
, cex = 0.8)
, sub = expression(paste("Colour and size scaled for emphasis to ", sqrt("Frequency")))
)
levelplot(sqrt(Freq)~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = myPal[4])
, scales = list(x = list(alternating = c(1,0,1)
, tck = 1:0)
, y = list(alternating = c(0,3))
)
, main = list(label = "Levelplots of the confusion matrices"
, cex = 0.8)
, sub = list(label = expression(paste("Colour and size scaled for emphasis to ", sqrt("Frequency")))
, cex = 0.5)
)
levelplot(Freq~Prediction+Reference | model
, data = confmats
, shrink = c(0.25, 1)
, col.regions = myPal.range
, strip = strip.custom(bg = myPal[4])
, scales = list(x = list(alternating = c(1,0,1)
, tck = 1:0)
, y = list(alternating = c(0,3))
)
, main = list(label = "Levelplots of the confusion matrices"
, cex = 0.8)
, sub = list(label = expression(paste("Colour and size scaled for emphasis to ", sqrt("Frequency")))
, cex = 0.75)
)
rm(list=ls())
