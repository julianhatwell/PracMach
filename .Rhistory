)
str(answers)
answers <- data.frame(id = 1:20
, ref_pred = "reference"
, answer = sapply(testing$num_window
, function(nw) {
unique(training[training$num_window == nw
, "classe"])
}
)
)
str(answers)
gbm_set_pred
answers$answer
answers["answer"]
answers[["answer"]]
pred <- data.frame(id = 1:20
, ref_pred = models[m,"model"]
, answer = get(models[m, "pred"]))
pred
answers <- data.frame(ref_pred = "reference"
, answer = sapply(testing$num_window
, function(nw) {
unique(training[training$num_window == nw
, "classe"])
}
)
)
for (m in 1:n) {
pred <- data.frame(ref_pred = models[m,"model"]
, answer = get(models[m, "pred"]))
}
View(pred)
for (m in 1:n) {
answers <- rbind(answers, data.frame(ref_pred = models[m,"model"]
, answer = get(models[m, "pred"])
)
)
}
answers
answers <- data.frame(id = 1:20
, ref_pred = "reference"
, answer = sapply(testing$num_window
, function(nw) {
unique(training[training$num_window == nw
, "classe"])
}
)
)
for (m in 1:n) {
answers <- rbind(answers
, data.frame(id = 1:20
, ref_pred = models[m,"model"]
, answer = get(models[m, "pred"])
)
)
}
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = answer)
, colour = myPal[1], size = 7, alpha = 0.5) +
theme_bw()
g
View(answers)
g <- ggplot(data = answers, x = id) +
geom_point(aes(data = subset(answers, ref_pred == "reference"), y = answer)
, colour = myPal[1], size = 7, alpha = 0.5) +
theme_bw()
g
g <- ggplot(data = answers, x = id) +
geom_point(aes(data = subset(answers, ref_pred == "reference"), x = id, y = answer)
, colour = myPal[1], size = 7, alpha = 0.5) +
theme_bw()
g
g <- ggplot(data = answers, x = id) +
geom_point(data = subset(answers, ref_pred == "reference")
, aes(x = id, y = answer)
, colour = myPal[1], size = 7, alpha = 0.5) +
theme_bw()
g
g <- ggplot(data = answers, x = id) +
geom_point(data = subset(answers, ref_pred == "reference")
, aes(y = answer)
, colour = myPal[1], size = 7, alpha = 0.5) +
theme_bw()
g
g <- ggplot(data = answers, x = id) +
geom_point(data = subset(answers, ref_pred == "reference")
, aes(x = id, y = answer)
, colour = myPal[1], size = 7, alpha = 0.5) +
theme_bw()
g <- ggplot(data = subset(answers, ref_pred == "reference")
, aes(x = id, y = answer)) +
geom_point(colour = myPal[1], size = 7, alpha = 0.5) +
theme_bw()
g
g + geom_point(data = subset(answers, ref_pred != "reference")
, shape = shp
, colour = clr
, size = sz)
g + geom_point(data = subset(answers, ref_pred != "reference")
, shape = shp
, colour = clr
, size = sz) +
facet_grid(. ~ ref_pred)
g + geom_point(data = subset(answers, ref_pred != "reference")
, aes(x = id, y = answer)
, shape = shp
, colour = clr
, size = sz) +
facet_grid(. ~ ref_pred)
g <- ggplot(data = subset(answers, ref_pred != "reference")
, shape = shp
, colour = clr
, size = sz) +
facet_grid(. ~ ref_pred)
g
g <- ggplot(data = subset(answers, ref_pred != "reference")
aes(x = id, y = answer)) +
geom_point(shape = shp, colour = clr, size = sz) +
facet_grid(. ~ ref_pred)
shp <- 15
sz <- 3
clr <-myPal[5]
g <- ggplot(data = subset(answers, ref_pred != "reference")
aes(x = id, y = answer)) +
geom_point(shape = shp, colour = clr, size = sz) +
facet_grid(. ~ ref_pred)
g <- ggplot(data = subset(answers, ref_pred != "reference")
aes(x = id, y = answer))
shp <- 15
sz <- 3
clr <-myPal[5]
g <- ggplot(data = subset(answers, ref_pred != "reference")
, aes(x = id, y = answer)) +
geom_point(shape = shp, colour = clr, size = sz) +
facet_grid(. ~ ref_pred)
g
g + geom_point(data = subset(answers, ref_pred == "reference")
, aes(x = id, y = answer)
, colour = myPal[1], size = 7, alpha = 0.5)
)
answers <- data.frame()
for (m in 1:n) {
answers <- rbind(answers, data.frame(id = 1:20
, model = models[m,"model"]
, answer = get(models[m, "pred"])
)
)
}
View(answers)
answers <- data.frame()
for (m in 1:n) {
answers <- rbind(answers, data.frame(id = 1:20
, model = models[m,"model"]
, prediction = get(models[m, "pred"])
, reference = sapply(testing$num_window
, function(nw) {
unique(training[training$num_window == nw
, "classe"])
}
)
)
)
}
g <- ggplot(data = answers, aes(x = id) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5)) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_grid(. ~ ref_pred)
g <- ggplot(data = answers, aes(x = id) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5))
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5))
g <- ggplot(data = answers, aes(x = id))
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5)
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_grid(. ~ ref_pred)
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_grid(. ~ model)
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_grid(. ~ model) +
theme_bw()
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(. ~ model) +
theme_bw()
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(. ~ model, ncol = 2) +
theme_bw()
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(. ~ model, ncol = 2) +
theme_bw()
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(. ~ model) +
theme_bw()
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(. ~ model)
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15)
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(. ~ model)
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_grid(. ~ model) +
theme_bw()
g
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_grid(. ~ model) + theme_bw() +
labs(list(x = "Problem Id", y = "Prediction"))
g
rm(list = ls())
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_grid(. ~ model, nrow = 2) + theme_bw() +
labs(list(x = "Problem Id", y = "Prediction"))
g
source('~/.active-rstudio-document', echo=TRUE)
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_grid(. ~ model, nrow = 2) + theme_bw() +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15)
example("facet_grid")
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_grid(. ~ model) + theme_bw() +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(. ~ model) + theme_bw() +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_grid(. ~ model) + theme_bw() +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model) + theme_bw() +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() + scale_colour_discrete()
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() + scale_colour_discrete() +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() +
scale_colour_manual(value = myPal) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() +
scale_colour_manual(values = myPal) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.4) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() +
strip.background = element_rect(colour="red", fill="#CCCCFF") +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.4) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw(strip.background = element_rect(colour="red", fill="#CCCCFF")) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.4) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme(strip.background = element_rect(colour="red", fill="#CCCCFF")) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.4) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw
theme(strip.background = element_rect(colour="red", fill="#CCCCFF")) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.4) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw +
theme(strip.background = element_rect(colour="red", fill="#CCCCFF")) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.4) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() +
theme(strip.background = element_rect(colour="red", fill="#CCCCFF")) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.4) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() +
theme(strip.background = element_rect(fill=myPal[4])) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 1) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() +
theme(strip.background = element_rect(fill=myPal[4])) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() +
theme(strip.background = element_rect(fill=myPal[4])) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() +
theme(strip.background = element_rect(fill=myPal[3])) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() +
theme(strip.background = element_rect(fill=myPal[2])) +
labs(list(x = "Problem Id", y = "Prediction"))
g
g <- ggplot(data = answers, aes(x = id)) +
geom_point(aes(y = reference)
, colour = myPal[1], size = 7, alpha = 0.5) +
geom_point(aes(y = prediction)
, colour = myPal[5], size = 3, shape = 15) +
facet_wrap(~ model, ncol = 2) + theme_bw() +
theme(strip.background = element_rect(fill=myPal[4])) +
labs(list(x = "Problem Id", y = "Prediction"))
g
rm(list = ls())
training_set <- training[training_ids,]
set.seed(23)
training_ids <- createDataPartition(y = training$classe, p = 0.8, list = FALSE)
training_set <- training[training_ids,]
validation_set <- training[-training_ids,]
training <- read_csv("pml-training.csv")
library(readr)
training <- read_csv("pml-training.csv")
View(training)
rm(training)
trellis.par.get()
library(lattice)
trellis.par.get()
state.info <-
data.frame(name = state.name, area = state.x77[, "Area"],
long = state.center$x, lat = state.center$y,
population = 1000 * state.x77[, "Population"])
state.info$density <- with(state.info, population / area)
cloud(density ~ long + lat, state.info,
subset = !(name %in% c("Alaska", "Hawaii"))
type = "h", lwd = 2, zlim = c(0, max(state.info$density)),
scales = list(arrows = FALSE))
cloud(density ~ long + lat, state.info,
subset = !(name %in% c("Alaska", "Hawaii")),
type = "h", lwd = 2, zlim = c(0, max(state.info$density)),
scales = list(arrows = FALSE))
cloud(density ~ long + lat, state.info,
subset = !(name %in% c("Alaska", "Hawaii")),
type = "h", lwd = 2, zlim = c(0, max(state.info$density)),
scales = list(arrows = FALSE),
par.settings =
list(axis.line = list(col = "transparent")))
, par.settings = list(axis.line = list(col = "transparent"))
trel <- trellis.par.get
trel <- trellis.par.get()
trel$strip.border$col
rm(list = ls())
